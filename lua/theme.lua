local colors = require('colors')
local hi = require('utils.hi')
local li = require('utils.li')

if vim.fn.has('termguicolors') == 1 then vim.opt.termguicolors = true end

-- attributes
hi('Bold', nil, nil, nil)
hi('Italic', nil, nil, 'italic')
hi('Underline', nil, nil, 'underline')

-- editor
hi('ColorColumn', nil, colors.deep_koamaru)
hi('VertSplit', colors.bg0, nil)
hi('Cursor', colors.bg3, colors.text0)
hi('lCursor', colors.bg3, colors.text0)
hi('CursorIM', colors.bg3, colors.text0)
hi('CursorLine', nil, colors.bg1)
hi('CursorLineNr', colors.silver, colors.bg2)
li('CursorColumn', 'CursorLine')
hi('LineNr', colors.secondary, colors.bg2)
hi('SignColumn', colors.secondary, colors.bg2)
li('SignColumnSB', 'SignColumn')
hi('Normal', colors.text0, colors.bg3)
hi('NormalSB', colors.secondary, colors.bg2)
hi('NormalFloat', colors.text0, colors.bg1)
hi('NonText', colors.mulled_wine)
li('Whitespace', 'NonText')
hi('StatusLine', colors.secondary, colors.bg1)
hi('StatusLineNC', colors.secondary, colors.bg1)
li('StatusLineTerm', 'StatusLine')
li('StatusLineTermNC', 'StatusLineNC')
hi('Search', nil, colors.royal_purple)
li('IncSearch', 'Search')
hi('Visual', nil, colors.scampi)
li('VisualNOS', 'Visual')
hi('FloatBorder', colors.bg1)
hi('FloatShadow', nil)
hi('FloatShadowThrough', nil)
hi('Directory', colors.secondary)
hi('EndOfBuffer', nil, nil)
hi('ErrorMsg', colors.brink_pink, nil)
hi('Folded', colors.secondary, nil, 'reverse')
hi('FoldColumn', colors.secondary, colors.bg2)
hi('Substitute', colors.brink_pink, colors.text0)
hi('MatchParen', colors.east_side, colors.blue_diamond)
hi('ModeMsg', colors.text0)
hi('MsgArea', colors.text0, colors.bg1)
hi('MoreMsg', colors.primary)
hi('PMenu', colors.text0, colors.bg0)
hi('PmenuSel', colors.primary, colors.bg3)
hi('PmenuSbar', nil, colors.bg0)
hi('PmenuThumb', nil, colors.scampi)
hi('Question', colors.primary)
hi('SpecialKey', colors.bg1)
hi('SpellBad', colors.brink_pink, nil, 'undercurl')
hi('SpellCap', colors.orange_red, nil, 'undercurl')
hi('SpellLocal', colors.secondary, nil, 'undercurl')
hi('SpellRare', colors.alice_blue, nil, 'undercurl')
hi('TabLine', colors.secondary, colors.bg2)
hi('TabLineFill', nil, colors.bg0)
hi('TabLineSel', colors.text0, colors.bg3)
hi('Title', colors.primary)
hi('WarningMsg', colors.primary)
hi('WildMenu', nil, colors.bg3)
li('QuickFixLine', 'Keyword')
li('qfLineNr', 'Keyword')
hi('qfFileName', colors.primary)
hi('DiffAdd', colors.mint_green, nil, 'reverse')
hi('DiffChange', colors.primary, nil, 'reverse')
hi('DiffDelete', colors.brink_pink, nil, 'reverse')
hi('DiffText', colors.text0, nil, 'reverse')
hi('RedrawDebugNormal', colors.secondary, nil, 'reverse')
hi('RedrawDebugClear', colors.gold, nil, 'reverse')
hi('RedrawDebugComposed', colors.mint_green, nil, 'reverse')
hi('RedrawDebugRecompose', colors.brink_pink, nil, 'reverse')
hi('Substitute', colors.columbia_blue, nil, 'reverse')
hi('NvimInternalError', colors.brink_pink, colors.bg0)

-- language
hi('Comment', colors.heliotrope, nil, 'italic')
hi('Constant', colors.brink_pink)
hi('String', colors.mint_green)
hi('Identifier', colors.columbia_blue)
hi('Keyword', colors.primary)
hi('Structure', colors.gold)
hi('Special', colors.aquamarine)
hi('Error', colors.scarlet, colors.bg1, 'undercurl')
hi('Todo', colors.primary, colors.bg3)
hi('Ignore', colors.secondary)
li('Annotation', 'Decorator')
li('Boolean', 'Constant')
li('Character', 'String')
li('Conceal', 'NonText')
li('Macro', 'Define')
li('PreCondit', 'PreProc')
li('Variable', 'Identifier')
li('Function', 'Keyword')
li('Conditional', 'Keyword')
li('Operator', 'Keyword')
li('StorageClass', 'Keyword')
li('Statement', 'Keyword')
li('SpecialChar', 'Special')
li('Type', 'Special')

-- debugger
hi('debugPC', nil, colors.scampi)
hi('debugBreakpoint', colors.brink_pink, colors.bg3)

-- diff
hi('diffAdded', colors.mint_green)
hi('diffRemoved', colors.brink_pink)
hi('diffChanged', colors.columbia_blue)
hi('diffOldFile', colors.text0)
hi('diffNewFile', colors.primary)
hi('diffFile', colors.secondary)
hi('diffLine', colors.gold)
hi('diffIndexLine', colors.mauve)
